#!/system/bin/sh
#
# ARISE Sound Systemsâ„¢
#
# Magnum Opus
#
# arisesoundserver
#
# www.arisesound.com

is_mounted() {
  case mount in
    *" $1 "*) echo 1;;
    *) echo 0;;
  esac;
}

if [ -d "/system_root" ]; then
  SYS=/system_root/system
  ROOT=""
else
  SYS=/system
  ROOT=""
fi

suimg=$(ls $ROOT/cache/su.img $ROOT/data/su.img 2>/dev/null)
if [ "$suimg" ]; then
  if [ "$(is_mounted $ROOT/su)" == 0 ]; then
    test ! -e $ROOT/su && mkdir $ROOT/su
    mount -t ext4 -o rw,noatime $suimg $ROOT/su
    for i in 0 1 2 3 4 5 6 7; do
      test "$(is_mounted $ROOT/su)" == 1 && break
      loop=$ROOT/dev/block/loop$i
      if [ ! -f "$loop" -o ! -b "$loop" ]; then
        mknod $loop b 7 $i
      fi
      losetup $loop $suimg && mount -t ext4 -o loop $loop $ROOT/su
    done
  fi
fi

BIN=$SYS/bin
XBIN=$SYS/xbin
SBIN=$ROOT/su/bin
SXBIN=$ROOT/su/xbin
SU=$ROOT/su/bin/su
XHIFI=$SYS/lib/soundfx/deuteronomy/libv4a_xhifi_ics.so
API=$(cat $SYS/build.prop | grep "ro.build.version.sdk=" | dd bs=1 skip=21 count=2)

if [ -e "$XHIFI" ] && [ "$API" -ge "21" ]; then

  if [ -e "$SU" ] && [ -d "$XBIN" ]; then

    ln -sf $SU $XBIN/su

    if [ -e "$SBIN/busybox" ]; then

      ln -sf $SBIN/busybox $XBIN/busybox

    elif [ -e "$SXBIN/busybox" ]; then

      ln -sf $SXBIN/busybox $XBIN/busybox

    fi

  fi

fi

if [ -e "$ROOT/data/magisk.img" ]; then
  AUDIT='sepolicy-inject --live'
else
  AUDIT='supolicy --live'
fi

$AUDIT "permissive audio_data_file audio_prop audioserver default_android_service dolby_prop dts_data_file init mediaserver platform_app priv_app property_socket su system_app system_data_file system_file system_prop system_server tmpfs untrusted_app"

$AUDIT "allow audioserver audioserver_tmpfs file { read write execute }"

$AUDIT "allow mediaserver mediaserver_tmpfs file { read write execute }"

$AUDIT "allow priv_app default_android_service service_manager { find }"

$AUDIT "allow priv_app init unix_stream_socket { connectto }"

$AUDIT "allow priv_app property_socket sock_file { write }"
